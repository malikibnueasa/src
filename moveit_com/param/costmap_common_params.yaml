# Customized for ArloBot
max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot
obstacle_range: 2.5
raytrace_range: 3.0

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
robot_radius: 0.15 # ArloBot
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
inflation_radius: 0.2  # max. distance from an obstacle at which costs are incurred for planning paths.
cost_scaling_factor: 5  # exponential rate at which the obstacle cost drops off (default: 10)

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)

map_type: costmap
transform_tolerance: 5 # seconds


origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

#observation_sources: scan bump
observation_sources: scan #The "observation_sources" parameter defines a list of sensors that are going to be passing information to the costmap separated by spaces. Each sensor is defined in the next lines. 

# scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
# Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note taht the max_obstacle_height is very important too!
scan: {data_type: LaserScan, topic: /scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3} #This line sets parameters on a sensor mentioned in observation_sources, and this example defines. The "frame_name" parameter should be set to the name of the coordinate frame of the sensor, the "data_type" parameter should be set to LaserScan or PointCloud depending on which message the topic uses, and the "topic_name" should be set to the name of the topic that the sensor publishes data on. The "marking" and "clearing" parameters determine whether the sensor will be used to add obstacle information to the costmap, clear obstacle information from the costmap, or do both.


# Can we just set up two of these here?
#bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}
